# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Blog backEnd CI

on: 
  push:
    branches: 
      - master 

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      QINIU_ACCESSKEY: ${{ secrets.QINIU_ACCESSKEY }}
      QINIU_SECRETKEY: ${{ secrets.QINIU_SECRETKEY }}
      JWT_SECRETKEY: ${{ secrets.JWT_SECRETKEY }}
      MYSQL_URL_PROD: ${{ secrets.MYSQL_URL_PROD }}
      MYSQL_USERNAME_PROD: ${{ secrets.MYSQL_USERNAME_PROD }}
      MYSQL_PASSWORD_PROD: ${{ secrets.MYSQL_PASSWORD_PROD }}
      MAIL_HOST_PROD: ${{ secrets.MAIL_HOST_PROD }}
      MAIL_USERNAME_PROD: ${{ secrets.MAIL_USERNAME_PROD }}
      MAIL_PWD_PROD: ${{ secrets.MAIL_PWD_PROD }}
      REDIS_PROD: ${{ secrets.REDIS_PROD }}
      MYSQL_URL_TEST: ${{ secrets.MYSQL_URL_TEST }}
      MYSQL_USERNAME_TEST: ${{ secrets.MYSQL_USERNAME_TEST }}
      MYSQL_PASSWORD_TEST: ${{ secrets.MYSQL_PASSWORD_TEST }}
      JWT_SECRETKEY_TEST: ${{ secrets.JWT_SECRETKEY_TEST }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build jar file
      run: mvn -B package --file pom.xml
        
    - name: scp
      uses: horochx/deploy-via-scp@v1.0.1
      with:
        local: target/blog-0.0.1-SNAPSHOT.jar
        remote: /www/wwwroot/api.celess.cn
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}

    - name: Run SSH command
      uses: garygrossgarten/github-action-ssh@v0.5.0
      with:
        command: cd /www/wwwroot/api.celess.cn && bash build.sh
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
    
